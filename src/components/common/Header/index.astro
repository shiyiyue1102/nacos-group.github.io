---
import { useTranslations } from "@i18n/util";
import Navbar from "@components/common/Navbar.astro";
import LanguageToggle from "@components/common/LanguageToggle.astro";
import MobileNavbar from "@components/common/MobileNavbar.astro";
import SearchComp from "./searchComp/index.astro";
import Alert from "./Alert.astro";

interface Props {
  align?: "home" | "docs";
  position?: "static" | "sticky";
  lang: "zh-cn" | "en" | string;
}

const t = useTranslations(Astro);
const { align = "home", position = "sticky", lang } = Astro.props;

let height,
  width,
  xpadding = "";
(() => {
  switch (align) {
    case "home":
      height = "4rem";
      width = "85.125rem";
      xpadding = "0";
      return;
    case "docs":
      height = "3.5rem";
      width = "100%";
      xpadding = "1.5rem";
      return;
  }
})();
---

<span class="header-wrapper">
  <Alert />
  <my-layout
    style={`position: ${position}; height: ${height}`}
    class="w-full backdrop-blur-md top-0 z-[10] bg-gray-14 flex justify-center"
  >
    <!-- 方便控制header宽度 -->
    <div
      class=`header-content flex items-center justify-between border-b border-gray-14`
    >
      <div class="left-content h-full flex items-center">
        <a class="no-underline" href="/">
          <img
            class="logo"
            src="https://img.alicdn.com/imgextra/i4/O1CN01rW3vAB1FDWKSOiFf0_!!6000000000453-2-tps-204-40.png"
            alt="nacos-log"
          />
        </a>
        <MobileNavbar top={height} class="mobile-navbar h-full ml-4" />
      </div>

      <div class="center-content h-full">
        <Navbar top={height} class="pc-navbar h-full" />
      </div>

      <div class="right-content flex items-center md:gap-4">
        <LanguageToggle id="pc-toggle" size="small" lang={lang.toLowerCase()} />
        <SearchComp />
      </div>
    </div>
  </my-layout>
</span>

<script>
  // animation
  let script = document.createElement("script");
  script.src =
    "https://g.alicdn.com/cm-design/mw-vendor/1.6.12/web-animations-next.min.js?spm=defwork.home.0.0.413a5c4bEOqptl&file=web-animations-next.min.js";
  script.onload = function () {
    if (!document.getAnimations) {
      document.getAnimations = window.Element.prototype.getAnimations;
    }
  };
  document.head.appendChild(script);

  // 切换页面时如果有search参数，则将search参数添加到新页面的url中
  document.addEventListener("astro:before-swap", ev => {
    const originUrl = ev.from;
    const newUrl = ev.to;
    const oldSearchParams = originUrl.searchParams;
    const newSearchParams = newUrl.searchParams;
     // 如果旧页面有from参数，则将from参数添加到新页面的url（主要是为了无疑的漏斗使用）
    if (oldSearchParams.get("from")) {
      newSearchParams.set("from", oldSearchParams.get("from"));
    }
    // 如果新的页面没有source参数，则将source参数添加到新页面的url中
    if(oldSearchParams.get("source") && !newSearchParams.get("source")){
      newSearchParams.set("source", oldSearchParams.get("source"));
    }
  })

  const trackNavigate = ()=>{ 
		 setTimeout(function () {
			if(window.aes && window.AESPluginEvent) {
				const sendEvent = window?.aes.use(window.AESPluginEvent)
        const fromSearch = new URLSearchParams(window?.location?.search).get("from")
				sendEvent('TRACK_NAVIGATE', {
					c1:  window?.location?.pathname,
          c2: fromSearch
				});
			}
		 }, 1000)
	};

  document.addEventListener("DOMContentLoaded", () => {
    if (performance.getEntriesByType('navigation').length > 0) {
        // 尝试获取 PerformanceNavigationTiming 信息
        const [navigationEntry] = performance.getEntriesByType('navigation');

        if (navigationEntry) {
          // 使用 PerformanceNavigationTiming API
          if(navigationEntry.type === 'navigate') {
            console.log("navigate")
            trackNavigate()
          }
        }
    } else {
      // Fallback: 使用 performance.navigation (已废弃但用于兼容性)
        const navigationType = performance.navigation.type;
        if (navigationType === performance.navigation.TYPE_NAVIGATE) {
          console.log("fallback navigate")
          trackNavigate()
        }
    }
  })
</script>

<script>
  function addCopilot() {
    const copilotJSScript = document.createElement("script");
    copilotJSScript.type = "text/javascript";
    copilotJSScript.src = "https://g.alicdn.com/cm-design/copilot-booter/0.0.27/copilot-booter.js";
    copilotJSScript.addEventListener("load", function () {
      if (window.CNPilot) {
        window.CNPilot.mounted({
          CNPilot_OPEN_SOURCE: ["nacos.io"],
          CNPilot_OPEN_SOURCE_API: "https://ai.nacos.io",
          showFloatICON: true,
          globalStyle: {
            top: "64px",
          },
          entryIconProps: {
            'position-type':'updown',
            'icon-hover-text':'专家答疑',
            'icon-url':'https://img.alicdn.com/imgextra/i3/O1CN013gOExm1X2g7hKMTjC_!!6000000002866-2-tps-92-92.png',
            'icon-style': { 
              color:'white', 
              width: '80px',
              height: '80px',
              background: '#3D57DA',
              border:'none',
              paddingTop: '12px'
            },
            'image-style': {
              width: '46px',
              height: '46px',
              borderRadius: '16px',
            },
            'icon-text': {
              color: '#F4F4F6',
              width: '100%',
              fontSize: '10px',
              fontFamily: " Source Han Sans",
              fontWeight: "normal",
              lineHeight: "normal",
              textAlign: "center",
              letterSpacing: "0em"
            }
          },
          headerProps: {
            closeIcon: { show: true }, // 关闭按钮
            titleText: "无疑 专家智能答疑",
          },
        });
      }
    });
    document.body.append(copilotJSScript);
  }

  let htmlWidthInRem = 100;
  try {
    const htmlElement = document.documentElement;
    const computedStyle = window.getComputedStyle(htmlElement);
    const rootFontSize = parseFloat(computedStyle.fontSize);
    const htmlWidthInPixels = htmlElement.clientWidth;
    htmlWidthInRem = htmlWidthInPixels / rootFontSize;
  } catch(err) {
    console.info('err', err);
  };
  // 30rem
  if(htmlWidthInRem > 30) {
    addCopilot();

    document.addEventListener("astro:page-load", function () {
      if (window.CNPilot) window.CNPilot.unmounted();
      addCopilot();
    });
  };
</script>

<script>
  class HeaderLayout2 extends HTMLElement {
    private ifscroll: boolean;
    constructor() {
      super();
      this.ifscroll = false;
      window.addEventListener("scroll", this.handleScroll);
    }

    handleScroll = () => {
      if (window.innerWidth <= 800) return;
      if (window.scrollY >= 100 && !this.ifscroll) {
        this.ifscroll = true;
        this.classList.add("bg-gray-14/[0.84]");
      }
      if (window.scrollY <= 100 && this.ifscroll) {
        this.ifscroll = false;
        this.classList.remove("bg-gray-14/[0.84]");
      }
    };
  }
  customElements.define("my-layout", HeaderLayout2);
</script>

<style define:vars={{ width, height, xpadding }} is:global>
  .header-wrapper {
    my-layout {
      --header-content-width: var(--width);
      --logo-width: 96px;
      --header-height: var(--height);
      --header-xl-padding: var(--xpadding);
    }

    .header-content {
      width: var(--header-content-width);
      padding-left: var(--header-xl-padding);
      padding-right: var(--header-xl-padding);
    }

    .left-content .logo {
      vertical-align: sub;
      width: var(--logo-width);
    }

    .left-content .mobile-navbar {
      display: none;
    }

    @media (max-width: 85.125rem) {
      /* 在这里编写屏幕宽度小于85.125rem的CSS样式 */
      .header-content {
        width: 100%;
        padding-left: 1.5rem;
        padding-right: 1.5rem;
      }
    }

    @media (max-width: 54rem) {
      /** header 特殊处理 屏幕小于 860px 就显示不完全 */
      .header-content {
        width: 100%;
        padding-left: 1.5rem;
        padding-right: 1.5rem;
      }
      .left-content .mobile-navbar {
        display: block;
      }
      .center-content {
        display: none;
      }
      .code-toggle {
        padding: 0 !important;
        background-color: transparent !important;
        span {
          display: none;
        }
        svg {
          width: 1.5rem;
          height: 1.5rem;
        }
      }
    }
  }
</style>
